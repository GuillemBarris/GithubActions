name: Angular TDD Workflow

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop

jobs:
  test:
    runs-on: windows-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }} 
          
      - name: Ensure full history
        shell: pwsh
        run: |
          if ((git rev-parse --is-shallow-repository) -eq "true") {
            git fetch --unshallow
          } else {
            Write-Output "Repository is already complete, skipping unshallow fetch."
          }

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Cache Node.js modules
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm install
        working-directory: 'GithubActions/'

      - name: Detect new or modified test files
        id: new_tests
        shell: pwsh
        run: |
          $NEW_TESTS = git diff --name-only HEAD~1 HEAD | Select-String -Pattern '\.spec\.ts$|\.test\.ts$'
          if ($NEW_TESTS) {
            Write-Output "New or modified test files detected: $NEW_TESTS"
            Write-Output "NEW_TESTS_FOUND=true" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
          } else {
            Write-Output "No new or modified test files detected."
            Write-Output "NEW_TESTS_FOUND=false" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
          }

      - name: Run tests with coverage
        shell: cmd
        run: |
          npm run test:coverage || (echo "test:coverage script not found, skipping coverage report generation." && exit 0)
        working-directory: 'GithubActions/'

      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: GithubActions/coverage

      - name: Commit new test results if npm test passes
        if: success() && env.NEW_TESTS_FOUND == 'true'
        shell: pwsh
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions@guillembarris.noreply.github.com"
          git add .
          if (git status --porcelain) {
            git commit -m "NEW TESTS PASSED: ${{ env.PASSED_TESTS }}"
            git push
          } else {
            Write-Output "No changes to commit."
          }

