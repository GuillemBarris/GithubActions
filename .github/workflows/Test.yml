name: Test Workflow
on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop

jobs:
  test:
    runs-on: windows-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Debug workspace
        run: dir

      - name: Ensure full history
        shell: pwsh
        run: |
          if ((git rev-parse --is-shallow-repository) -eq "true") {
            git fetch --unshallow
          } else {
            Write-Output "Repository is already complete, skipping unshallow fetch."
          }

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Cache Node.js modules
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm install
        working-directory: 'GithubActions/'

      - name: Detect new test files
        id: new_tests
        shell: pwsh
        run: |
          $NEW_TESTS = git diff --name-only HEAD~1 HEAD | Select-String -Pattern '\.spec\.ts$|\.test\.ts$'
          if ($NEW_TESTS) {
            Write-Output "New test files detected: $NEW_TESTS"
            Write-Output "NEW_TESTS_FOUND=true" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
            Write-Output "NEW_TESTS=$NEW_TESTS" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
          } else {
            Write-Output "No new test files detected."
            Write-Output "NEW_TESTS_FOUND=false" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
          }

      - name: Run tests with npm test
        run: npm test -- --json --outputFile=test-results.json
        working-directory: 'GithubActions/src'

      - name: Check if tests passed
        id: check_tests
        shell: pwsh
        run: |
          if (Test-Path test-results.json) {
            $PASSED_TESTS = jq -r '.testResults[] | select(.status=="passed") | .name' test-results.json | Join-String -Separator ", "
            if ($PASSED_TESTS) {
              Write-Output "PASSED_TESTS=$PASSED_TESTS" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
              Write-Output "TESTS_PASSED=true" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
            } else {
              Write-Output "No tests passed."
              Write-Output "TESTS_PASSED=false" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
            }
          } else {
            Write-Output "No test results found."
            Write-Output "TESTS_PASSED=false" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
          }

      - name: Commit new test results if npm test passes
        if: env.TESTS_PASSED == 'true' && env.NEW_TESTS_FOUND == 'true'
        shell: pwsh
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions@guillembarris.noreply.github.com"
          git add .
          if (git status --porcelain) {
            git commit -m "NEW TESTS PASSED: ${{ env.PASSED_TESTS }}"
            git push
          } else {
            Write-Output "No changes to commit."
          }
